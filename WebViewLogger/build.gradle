
plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'

    id "com.jfrog.bintray"
    id 'maven-publish'
    id 'com.github.dcendents.android-maven'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'com.google.android.material:material:1.2.1'

    def room_version = "2.2.6"

    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.8"
    api 'com.google.code.gson:gson:2.8.6'

    api "androidx.room:room-ktx:$room_version"


    // Rx Dependencies
    api "io.reactivex.rxjava2:rxjava:2.2.19"
    api "io.reactivex.rxjava2:rxandroid:2.1.1"
    api "io.reactivex.rxjava2:rxkotlin:2.2.0"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}


ext {
    bintrayRepo = 'WebKit'
    bintrayName = 'wvl'

    publishedGroupId = 'com.arul.webkit'
    libraryName = 'WebViewLogger'
    artifact = 'wvl'

    libraryDescription = 'This library use for view the live log from WebView without chrome://inspect'

    gitUrl = 'https://github.com/arulmani33/WVL.git'

    libraryVersion = '1.0.5'

    developerId = 'arulmani'
    developerName = 'Arul Mani'
    developerEmail = 'jerrymani33@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

group = publishedGroupId
version = libraryVersion

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())



publishing {
    publications {
        BintrayPublication(MavenPublication) {
            groupId publishedGroupId
            version = libraryVersion
            artifactId artifact

            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            pom.withXml {

                def dependenciesNode = asNode().appendNode('dependencies')
                // Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

bintray {

    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']

    publications = ['BintrayPublication']

    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        vcsUrl = gitUrl
        licenses = allLicenses
        dryRun = false
        publish = true
        override = false

        publicDownloadNumbers = true

        version {
            desc = libraryDescription
            name = libraryVersion
            released  = new Date()
            vcsTag = libraryVersion
        }
    }

    publish = true
}